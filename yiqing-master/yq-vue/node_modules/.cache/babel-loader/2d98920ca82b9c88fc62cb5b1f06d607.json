{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport Aside from \"@/components/Aside\";\nimport Header from \"@/components/Header\";\nexport default {\n  name: \"Role\",\n\n  data() {\n    return {\n      tableData: [],\n      total: 0,\n      pageNum: 1,\n      pageSize: 2,\n      name: \"\",\n      description: \"\",\n      dialogFormVisible: false,\n      menuDialogVis: false,\n      form: {},\n      multipleSelection: [],\n      menuData: [],\n      props: {\n        label: 'name'\n      },\n      expends: [],\n      checks: [],\n      roleId: 0,\n      roleFlag: ''\n    };\n  },\n\n  created() {\n    // 请求分页查询数据\n    this.load();\n  },\n\n  methods: {\n    collapse() {\n      // 点击收缩按钮触发\n      this.isCollapse = !this.isCollapse;\n\n      if (this.isCollapse) {\n        // 收缩\n        this.sideWidth = 64;\n        this.collapseBtnClass = 'el-icon-s-unfold';\n        this.logoTextShow = false;\n      } else {\n        // 展开\n        this.sideWidth = 200;\n        this.collapseBtnClass = 'el-icon-s-fold';\n        this.logoTextShow = true;\n      }\n    },\n\n    load() {\n      this.request.get(\"/manage/page\", {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name,\n          description: this.description\n        }\n      }).then(res => {\n        console.log(res);\n        this.tableData = res.data.records;\n        this.total = res.data.total;\n      });\n    },\n\n    handleAdd() {\n      this.dialogFormVisible = true;\n      this.form = {};\n    },\n\n    save() {\n      this.request.post(\"/manage\", this.form).then(res => {\n        if (res.code === '200') {\n          this.$message.success(\"保存成功\");\n          this.dialogFormVisible = false;\n          this.load();\n        } else {\n          this.$message.error(\"保存失败\");\n        }\n      });\n    },\n\n    handleEdit(row) {\n      this.form = row;\n      this.dialogFormVisible = true;\n    },\n\n    del(id) {\n      this.request.delete(\"/manage/\" + id).then(res => {\n        if (res.code === '200') {\n          this.$message.success(\"删除成功\");\n          this.load();\n        } else {\n          this.$message.error(\"删除失败\");\n        }\n      });\n    },\n\n    handleSelectionChange(val) {\n      console.log(val);\n      this.multipleSelection = val;\n    },\n\n    delBatch() {\n      let ids = this.multipleSelection.map(v => v.id); // [{}, {}, {}] => [1,2,3]\n\n      this.request.post(\"/manage/del/batch\", ids).then(res => {\n        if (res.code === '200') {\n          this.$message.success(\"批量删除成功\");\n          this.load();\n        } else {\n          this.$message.error(\"批量删除失败\");\n        }\n      });\n    },\n\n    reset() {\n      this.name = \"\";\n      this.load();\n    },\n\n    handleSizeChange(pageSize) {\n      console.log(pageSize);\n      this.pageSize = pageSize;\n      this.load();\n    },\n\n    handleCurrentChange(pageNum) {\n      console.log(pageNum);\n      this.pageNum = pageNum;\n      this.load();\n    },\n\n    saveRoleMenu() {\n      this.request.post(\"/manage/manageMenu/\" + this.roleId, this.$refs.tree.getCheckedKeys()).then(res => {\n        if (res.code === '200') {\n          this.$message.success(\"绑定成功\");\n          this.menuDialogVis = false; // 操作管理员角色后需要重新登录\n\n          if (this.roleFlag === 'MANAGE_ADMIN') {\n            this.$store.commit(\"logout\");\n          }\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n\n    selectMenu(role) {\n      this.menuDialogVis = true;\n      this.roleId = role.id;\n      this.roleFlag = role.flag; //请求菜单数据\n\n      this.request.get(\"/menu\").then(res => {\n        this.menuData = res.data; //把后台返回的菜单数据处理成id数组\n\n        this.expends = this.menuData.map(v => v.id);\n      });\n      this.request.get(\"/manage/manageMenu/\" + this.roleId).then(res => {\n        this.checks = res.data;\n        this.request.get(\"/menu/ids\").then(r => {\n          const ids = r.data;\n          ids.forEach(id => {\n            if (!this.checks.includes(id)) {\n              // 可能会报错：Uncaught (in promise) TypeError: Cannot read properties of undefined (reading 'setChecked')\n              this.$refs.tree.setChecked(id, false);\n            }\n          });\n          this.menuDialogVis = true;\n        });\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":";AA+FA;AACA;AAEA;EACAA,YADA;;EAEAC;IACA;MACAC,aADA;MAEAC,QAFA;MAGAC,UAHA;MAIAC,WAJA;MAKAL,QALA;MAMAM,eANA;MAOAC,wBAPA;MAQAC,oBARA;MASAC,QATA;MAUAC,qBAVA;MAWAC,YAXA;MAYAC;QACAC;MADA,CAZA;MAeAC,WAfA;MAgBAC,UAhBA;MAiBAC,SAjBA;MAkBAC;IAlBA;EAoBA,CAvBA;;EAwBAC;IACA;IACA;EACA,CA3BA;;EA6BAC;IACAC;MAAA;MACA;;MACA;QAAA;QACA;QACA;QACA;MACA,CAJA,MAIA;QAAA;QACA;QACA;QACA;MACA;IACA,CAZA;;IAaAC;MACA;QACAC;UACAlB,qBADA;UAEAC,uBAFA;UAGAL,eAHA;UAIAM;QAJA;MADA,GAOAiB,IAPA,CAOAC;QACAC;QAEA;QACA;MAEA,CAbA;IAcA,CA5BA;;IA6BAC;MACA;MACA;IAEA,CAjCA;;IAmCAC;MACA;QACA;UACA;UACA;UACA;QACA,CAJA,MAIA;UACA;QACA;MACA,CARA;IASA,CA7CA;;IA8CAC;MACA;MACA;IACA,CAjDA;;IAkDAC;MACA;QACA;UACA;UACA;QACA,CAHA,MAGA;UACA;QACA;MACA,CAPA;IAQA,CA3DA;;IA4DAC;MACAL;MACA;IACA,CA/DA;;IAgEAM;MACA,gDADA,CACA;;MACA;QACA;UACA;UACA;QACA,CAHA,MAGA;UACA;QACA;MACA,CAPA;IAQA,CA1EA;;IA2EAC;MACA;MACA;IACA,CA9EA;;IA+EAC;MACAR;MACA;MACA;IACA,CAnFA;;IAoFAS;MACAT;MACA;MACA;IACA,CAxFA;;IAyFAU;MACA;QACA;UACA;UACA,2BAFA,CAGA;;UACA;YACA;UACA;QACA,CAPA,MAOA;UACA;QACA;MACA,CAXA;IAYA,CAtGA;;IAuGAC;MACA;MACA;MACA,0BAHA,CAIA;;MACA;QACA,yBADA,CAEA;;QACA;MACA,CAJA;MAKA;QACA;QAEA;UAEA;UACAC;YACA;cACA;cACA;YACA;UACA,CALA;UAMA;QACA,CAVA;MAYA,CAfA;IAgBA;;EAjIA;AA7BA","names":["name","data","tableData","total","pageNum","pageSize","description","dialogFormVisible","menuDialogVis","form","multipleSelection","menuData","props","label","expends","checks","roleId","roleFlag","created","methods","collapse","load","params","then","res","console","handleAdd","save","handleEdit","del","handleSelectionChange","delBatch","reset","handleSizeChange","handleCurrentChange","saveRoleMenu","selectMenu","ids"],"sourceRoot":"src/views","sources":["Role.vue"],"sourcesContent":["<template>\n<div>\n  <div style=\"margin: 10px 0\">\n    <el-input style=\"width: 200px\" placeholder=\"请输入名称\" suffix-icon=\"el-icon-search\" v-model=\"name\"></el-input>\n    <el-button class=\"ml-5\" type=\"primary\" @click=\"load\">搜索</el-button>\n    <el-button  type=\"warning\" @click=\"reset\" >重置</el-button>\n  </div>\n\n  <div style=\"margin: 10px 0\">\n    <el-button type=\"primary\" @click=\"handleAdd\">新增 <i class=\"el-icon-circle-plus-outline\"></i></el-button>\n    <el-popconfirm\n        class=\"ml-5\"\n        confirm-button-text='确定'\n        cancel-button-text='我再想想'\n        icon=\"el-icon-info\"\n        icon-color=\"red\"\n        title=\"您确定批量删除这些数据吗？\"\n        @confirm=\"delBatch\"\n    >\n      <el-button type=\"danger\" slot=\"reference\">批量删除 <i class=\"el-icon-remove-outline\"></i></el-button>\n    </el-popconfirm>\n  </div>\n\n  <el-table :data=\"tableData\" border stripe :header-cell-class-name=\"'headerBg'\" @selection-change=\"handleSelectionChange\">\n    <el-table-column type=\"selection\" width=\"55\"></el-table-column>\n    <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\n    <el-table-column prop=\"name\" label=\"名称\" ></el-table-column>\n    <el-table-column prop=\"description\" label=\"描述\"></el-table-column>\n    <el-table-column label=\"操作\"  width=\"280\" align=\"center\">\n      <template slot-scope=\"scope\">\n        <el-button type=\"info\" @click=\"selectMenu(scope.row)\">分配菜单 <i class=\"el-icon-menu\"></i></el-button>\n        <el-button type=\"success\" @click=\"handleEdit(scope.row)\">编辑 <i class=\"el-icon-edit\"></i></el-button>\n        <el-popconfirm\n            class=\"ml-5\"\n            confirm-button-text='确定'\n            cancel-button-text='我再想想'\n            icon=\"el-icon-info\"\n            icon-color=\"red\"\n            title=\"您确定删除吗？\"\n            @confirm=\"del(scope.row.id)\"\n        >\n          <el-button type=\"danger\" slot=\"reference\">删除 <i class=\"el-icon-remove-outline\"></i></el-button>\n        </el-popconfirm>\n      </template>\n    </el-table-column>\n  </el-table>\n  <div style=\"padding: 10px 0\">\n    <el-pagination\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        :current-page=\"pageNum\"\n        :page-sizes=\"[2, 5, 10, 20]\"\n        :page-size=\"pageSize\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\">\n    </el-pagination>\n  </div>\n  <el-dialog title=\"角色信息\" :visible.sync=\"dialogFormVisible\" width=\"30%\" >\n    <el-form label-width=\"80px\" size=\"small\">\n      <el-form-item label=\"姓名\">\n        <el-input v-model=\"form.name\" autocomplete=\"off\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"描述\">\n        <el-input v-model=\"form.description\" autocomplete=\"off\"></el-input>\n      </el-form-item>\n    </el-form>\n    <div slot=\"footer\" class=\"dialog-footer\">\n      <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\n      <el-button type=\"primary\" @click=\"save\">确 定</el-button>\n    </div>\n  </el-dialog>\n  <el-dialog title=\"菜单分配\" :visible.sync=\"menuDialogVis\" width=\"30%\" >\n    <el-tree\n        :props=\"props\"\n        :data=\"menuData\"\n        node-key=\"id\"\n        ref=\"tree\"\n        :default-expanded-keys=\"expends\"\n        :default-checked-keys=\"checks\"\n        show-checkbox\n        >\n       <span class=\"custom-tree-node\" slot-scope=\"{ node, data }\">\n            <span><i :class=\"data.icon\"></i> {{ data.name }}</span>\n         </span>\n    </el-tree>\n    <div slot=\"footer\" class=\"dialog-footer\">\n      <el-button @click=\"menuDialogVis = false\">取 消</el-button>\n      <el-button type=\"primary\" @click=\"saveRoleMenu\">确 定</el-button>\n    </div>\n  </el-dialog>\n\n</div>\n</template>\n\n<script>\nimport Aside from \"@/components/Aside\";\nimport Header from \"@/components/Header\";\n\nexport default {\n  name: \"Role\",\n  data() {\n    return {\n      tableData: [],\n      total: 0,\n      pageNum: 1,\n      pageSize: 2,\n      name: \"\",\n      description: \"\",\n      dialogFormVisible: false,\n      menuDialogVis: false,\n      form: {},\n      multipleSelection: [],\n      menuData:  [],\n      props:{\n        label:'name',\n      },\n      expends:[],\n      checks:[],\n      roleId: 0,\n      roleFlag:'',\n    }\n  },\n  created() {\n    // 请求分页查询数据\n    this.load()\n  },\n\n  methods: {\n    collapse() {  // 点击收缩按钮触发\n      this.isCollapse = !this.isCollapse\n      if (this.isCollapse) {  // 收缩\n        this.sideWidth = 64\n        this.collapseBtnClass = 'el-icon-s-unfold'\n        this.logoTextShow = false\n      } else {   // 展开\n        this.sideWidth = 200\n        this.collapseBtnClass = 'el-icon-s-fold'\n        this.logoTextShow = true\n      }\n    },\n    load() {\n      this.request.get(\"/manage/page\", {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name,\n          description: this.description,\n        }\n      }).then(res => {\n        console.log(res)\n\n        this.tableData = res.data.records\n        this.total = res.data.total\n\n      })\n    },\n    handleAdd(){\n      this.dialogFormVisible=true\n      this.form={}\n\n    },\n\n    save(){\n      this.request.post(\"/manage\",this.form).then(res => {\n        if(res.code ==='200'){\n          this.$message.success(\"保存成功\")\n          this.dialogFormVisible=false\n          this.load()\n        }else {\n          this.$message.error(\"保存失败\")\n        }\n      })\n    },\n    handleEdit(row) {\n      this.form = row\n      this.dialogFormVisible = true\n    },\n    del(id) {\n      this.request.delete(\"/manage/\" + id).then(res => {\n        if(res.code==='200'){\n          this.$message.success(\"删除成功\")\n          this.load()\n        } else {\n          this.$message.error(\"删除失败\")\n        }\n      })\n    },\n    handleSelectionChange(val) {\n      console.log(val)\n      this.multipleSelection = val\n    },\n    delBatch() {\n      let ids = this.multipleSelection.map(v => v.id)  // [{}, {}, {}] => [1,2,3]\n      this.request.post(\"/manage/del/batch\", ids).then(res => {\n        if(res.code==='200'){\n          this.$message.success(\"批量删除成功\")\n          this.load()\n        } else {\n          this.$message.error(\"批量删除失败\")\n        }\n      })\n    },\n    reset(){\n      this.name=\"\"\n      this.load()\n    },\n    handleSizeChange(pageSize) {\n      console.log(pageSize)\n      this.pageSize = pageSize\n      this.load()\n    },\n    handleCurrentChange(pageNum) {\n      console.log(pageNum)\n      this.pageNum = pageNum\n      this.load()\n    },\n    saveRoleMenu(){\n      this.request.post(\"/manage/manageMenu/\" + this.roleId, this.$refs.tree.getCheckedKeys()).then(res => {\n        if(res.code==='200'){\n          this.$message.success(\"绑定成功\")\n          this.menuDialogVis=false\n          // 操作管理员角色后需要重新登录\n          if (this.roleFlag === 'MANAGE_ADMIN') {\n            this.$store.commit(\"logout\")\n          }\n        }else {\n          this.$message.error(res.msg)\n        }\n      })\n    },\n    selectMenu(role){\n      this.menuDialogVis=true\n      this.roleId=role.id;\n      this.roleFlag=role.flag;\n      //请求菜单数据\n      this.request.get(\"/menu\").then(res => {\n        this.menuData = res.data\n        //把后台返回的菜单数据处理成id数组\n        this.expends=this.menuData.map(v => v.id)\n      })\n      this.request.get(\"/manage/manageMenu/\" +this.roleId).then(res => {\n        this.checks= res.data\n\n        this.request.get(\"/menu/ids\").then(r =>{\n\n          const ids=r.data;\n          ids.forEach(id =>{\n            if (!this.checks.includes(id)) {\n              // 可能会报错：Uncaught (in promise) TypeError: Cannot read properties of undefined (reading 'setChecked')\n              this.$refs.tree.setChecked(id, false)\n            }\n          })\n          this.menuDialogVis = true\n        })\n\n      })\n    },\n\n  }\n}\n</script>\n\n<style>\n.headerBg {\n  background: #eee!important;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}