{"ast":null,"code":"import axios from 'axios';\nimport ElementUI from 'element-ui';\nimport router from \"@/router\";\nconst request = axios.create({\n  baseURL: 'http://localhost:8081',\n  timeout: 30000\n}); // request 拦截器\n// 可以自请求发送前对请求做一些处理\n// 比如统一加token，对请求参数统一加密\n\nrequest.interceptors.request.use(config => {\n  config.headers['Content-Type'] = 'application/json;charset=utf-8';\n  let user = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : null;\n\n  if (user) {\n    config.headers['token'] = user.token; // 设置请求头\n  }\n\n  return config;\n}, error => {\n  return Promise.reject(error);\n}); // response 拦截器\n// 可以在接口响应后统一处理结果\n\nrequest.interceptors.response.use(response => {\n  let res = response.data; // 如果是返回的文件\n\n  if (response.config.responseType === 'blob') {\n    return res;\n  } // 兼容服务端返回的字符串数据\n\n\n  if (typeof res === 'string') {\n    res = res ? JSON.parse(res) : res;\n  } // 当权限验证不通过的时候给出提示\n\n\n  if (res.code === '401') {\n    //ElementUI.Message({\n    //  message: res.msg,\n    //type: 'error'\n    //\n    // });\n    router.push(\"/login\");\n  }\n\n  return res;\n}, error => {\n  console.log('err' + error); // for debug\n\n  return Promise.reject(error);\n});\nexport default request;","map":{"version":3,"names":["axios","ElementUI","router","request","create","baseURL","timeout","interceptors","use","config","headers","user","localStorage","getItem","JSON","parse","token","error","Promise","reject","response","res","data","responseType","code","push","console","log"],"sources":["/Users/amateur/Desktop/人机交互课程设计/yiqing-master/yq-vue/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\nimport ElementUI from 'element-ui';\nimport router from \"@/router\";\nconst request = axios.create({\n    baseURL: 'http://localhost:8081',\n    timeout: 30000\n})\n\n// request 拦截器\n// 可以自请求发送前对请求做一些处理\n// 比如统一加token，对请求参数统一加密\nrequest.interceptors.request.use(config => {\n    config.headers['Content-Type'] = 'application/json;charset=utf-8';\n    let user = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : null\n    if (user) {\n        config.headers['token'] = user.token;  // 设置请求头\n    }\n    return config\n}, error => {\n    return Promise.reject(error)\n});\n\n// response 拦截器\n// 可以在接口响应后统一处理结果\nrequest.interceptors.response.use(\n    response => {\n        let res = response.data;\n        // 如果是返回的文件\n        if (response.config.responseType === 'blob') {\n            return res\n        }\n        // 兼容服务端返回的字符串数据\n        if (typeof res === 'string') {\n            res = res ? JSON.parse(res) : res\n        }\n        // 当权限验证不通过的时候给出提示\n        if (res.code === '401') {\n            //ElementUI.Message({\n              //  message: res.msg,\n                //type: 'error'\n            //\n            // });\n            router.push(\"/login\")\n\n        }\n        return res;\n    },\n\n    error => {\n        console.log('err' + error) // for debug\n        return Promise.reject(error)\n    }\n)\n\n\nexport default request\n\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,MAAMC,OAAO,GAAGH,KAAK,CAACI,MAAN,CAAa;EACzBC,OAAO,EAAE,uBADgB;EAEzBC,OAAO,EAAE;AAFgB,CAAb,CAAhB,C,CAKA;AACA;AACA;;AACAH,OAAO,CAACI,YAAR,CAAqBJ,OAArB,CAA6BK,GAA7B,CAAiCC,MAAM,IAAI;EACvCA,MAAM,CAACC,OAAP,CAAe,cAAf,IAAiC,gCAAjC;EACA,IAAIC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,IAA+BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAA/B,GAA0E,IAArF;;EACA,IAAIF,IAAJ,EAAU;IACNF,MAAM,CAACC,OAAP,CAAe,OAAf,IAA0BC,IAAI,CAACK,KAA/B,CADM,CACiC;EAC1C;;EACD,OAAOP,MAAP;AACH,CAPD,EAOGQ,KAAK,IAAI;EACR,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CATD,E,CAWA;AACA;;AACAd,OAAO,CAACI,YAAR,CAAqBa,QAArB,CAA8BZ,GAA9B,CACIY,QAAQ,IAAI;EACR,IAAIC,GAAG,GAAGD,QAAQ,CAACE,IAAnB,CADQ,CAER;;EACA,IAAIF,QAAQ,CAACX,MAAT,CAAgBc,YAAhB,KAAiC,MAArC,EAA6C;IACzC,OAAOF,GAAP;EACH,CALO,CAMR;;;EACA,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;IACzBA,GAAG,GAAGA,GAAG,GAAGP,IAAI,CAACC,KAAL,CAAWM,GAAX,CAAH,GAAqBA,GAA9B;EACH,CATO,CAUR;;;EACA,IAAIA,GAAG,CAACG,IAAJ,KAAa,KAAjB,EAAwB;IACpB;IACE;IACE;IACJ;IACA;IACAtB,MAAM,CAACuB,IAAP,CAAY,QAAZ;EAEH;;EACD,OAAOJ,GAAP;AACH,CAtBL,EAwBIJ,KAAK,IAAI;EACLS,OAAO,CAACC,GAAR,CAAY,QAAQV,KAApB,EADK,CACsB;;EAC3B,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CA3BL;AA+BA,eAAed,OAAf"},"metadata":{},"sourceType":"module"}